{"{\"assumptions\":{},\"sourceRoot\":\"/Users/mandisolone/Desktop/repos/Build_Own_API/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mandisolone/Desktop/repos/Build_Own_API\",\"filename\":\"/Users/mandisolone/Desktop/repos/Build_Own_API/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mandisolone/Desktop/repos/Build_Own_API\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"import express from \"express\";\nimport config from \"./config\"; //checks if import is correct \nimport apiRouter from \"./routes\";\nimport morgan from \"morgan\";\nconst app = express();\n\n//Middlewear that parses incoming request data to JSON\n//Attaches JSON to body parameter of the request object \napp.use(express.json());\n\n//use the imported apiRouter to handle all requests\napp.use(\"/api\", apiRouter);\n\n//http request logger middleware for Node.js used with Express.js to log url, resp, req\napp.use(morgan(\"common\"));\n\n//Default Error Handler \napp.use((err, req, res, next) => {\n  console.error(err);\n  res.json({\n    name: err.name,\n    msg: err.message\n  });\n});\napp.listen(config.port, () => {\n  console.log(`Server listening on port ${config.port}...`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwiY29uZmlnIiwiYXBpUm91dGVyIiwibW9yZ2FuIiwiYXBwIiwidXNlIiwianNvbiIsImVyciIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwiZXJyb3IiLCJuYW1lIiwibXNnIiwibWVzc2FnZSIsImxpc3RlbiIsInBvcnQiLCJsb2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9tYW5kaXNvbG9uZS9EZXNrdG9wL3JlcG9zL0J1aWxkX093bl9BUEkvIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjsgXG5pbXBvcnQgY29uZmlnIGZyb20gXCIuL2NvbmZpZ1wiOyAvL2NoZWNrcyBpZiBpbXBvcnQgaXMgY29ycmVjdCBcbmltcG9ydCBhcGlSb3V0ZXIgZnJvbSBcIi4vcm91dGVzXCI7XG5pbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjsgXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy9NaWRkbGV3ZWFyIHRoYXQgcGFyc2VzIGluY29taW5nIHJlcXVlc3QgZGF0YSB0byBKU09OXG4vL0F0dGFjaGVzIEpTT04gdG8gYm9keSBwYXJhbWV0ZXIgb2YgdGhlIHJlcXVlc3Qgb2JqZWN0IFxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbi8vdXNlIHRoZSBpbXBvcnRlZCBhcGlSb3V0ZXIgdG8gaGFuZGxlIGFsbCByZXF1ZXN0c1xuYXBwLnVzZShcIi9hcGlcIiwgYXBpUm91dGVyKTtcblxuLy9odHRwIHJlcXVlc3QgbG9nZ2VyIG1pZGRsZXdhcmUgZm9yIE5vZGUuanMgdXNlZCB3aXRoIEV4cHJlc3MuanMgdG8gbG9nIHVybCwgcmVzcCwgcmVxXG5hcHAudXNlKG1vcmdhbihcImNvbW1vblwiKSk7ICBcblxuLy9EZWZhdWx0IEVycm9yIEhhbmRsZXIgXG5hcHAudXNlKChlcnIsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgcmVzLmpzb24oeyBuYW1lOiBlcnIubmFtZSwgbXNnOiBlcnIubWVzc2FnZSB9KTtcbn0pO1xuXG5hcHAubGlzdGVuKGNvbmZpZy5wb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQgJHtjb25maWcucG9ydH0uLi5gKTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFPLE1BQU0sU0FBUztBQUM3QixPQUFPQyxNQUFNLE1BQU0sVUFBVSxDQUFDLENBQUM7QUFDL0IsT0FBT0MsU0FBUyxNQUFNLFVBQVU7QUFDaEMsT0FBT0MsTUFBTSxNQUFNLFFBQVE7QUFFM0IsTUFBTUMsR0FBRyxHQUFHSixPQUFPLENBQUMsQ0FBQzs7QUFFckI7QUFDQTtBQUNBSSxHQUFHLENBQUNDLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDTSxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUV2QjtBQUNBRixHQUFHLENBQUNDLEdBQUcsQ0FBQyxNQUFNLEVBQUVILFNBQVMsQ0FBQzs7QUFFMUI7QUFDQUUsR0FBRyxDQUFDQyxHQUFHLENBQUNGLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFekI7QUFDQUMsR0FBRyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0UsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO0VBQy9CQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0wsR0FBRyxDQUFDO0VBQ2xCRSxHQUFHLENBQUNILElBQUksQ0FBQztJQUFFTyxJQUFJLEVBQUVOLEdBQUcsQ0FBQ00sSUFBSTtJQUFFQyxHQUFHLEVBQUVQLEdBQUcsQ0FBQ1E7RUFBUSxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFDO0FBRUZYLEdBQUcsQ0FBQ1ksTUFBTSxDQUFDZixNQUFNLENBQUNnQixJQUFJLEVBQUUsTUFBTTtFQUM1Qk4sT0FBTyxDQUFDTyxHQUFHLENBQUMsNEJBQTRCakIsTUFBTSxDQUFDZ0IsSUFBSSxLQUFLLENBQUM7QUFDM0QsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["express","config","apiRouter","morgan","app","use","json","err","req","res","next","console","error","name","msg","message","listen","port","log"],"sourceRoot":"/Users/mandisolone/Desktop/repos/Build_Own_API/","sources":["server.js"],"sourcesContent":["import express from \"express\"; \nimport config from \"./config\"; //checks if import is correct \nimport apiRouter from \"./routes\";\nimport morgan from \"morgan\"; \n\nconst app = express();\n\n//Middlewear that parses incoming request data to JSON\n//Attaches JSON to body parameter of the request object \napp.use(express.json());\n\n//use the imported apiRouter to handle all requests\napp.use(\"/api\", apiRouter);\n\n//http request logger middleware for Node.js used with Express.js to log url, resp, req\napp.use(morgan(\"common\"));  \n\n//Default Error Handler \napp.use((err, req, res, next) => {\n  console.error(err);\n  res.json({ name: err.name, msg: err.message });\n});\n\napp.listen(config.port, () => {\n  console.log(`Server listening on port ${config.port}...`);\n});\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAC/B,OAAOC,SAAS,MAAM,UAAU;AAChC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,GAAG,GAAGJ,OAAO,CAAC,CAAC;;AAErB;AACA;AACAI,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAF,GAAG,CAACC,GAAG,CAAC,MAAM,EAAEH,SAAS,CAAC;;AAE1B;AACAE,GAAG,CAACC,GAAG,CAACF,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEzB;AACAC,GAAG,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC/BC,OAAO,CAACC,KAAK,CAACL,GAAG,CAAC;EAClBE,GAAG,CAACH,IAAI,CAAC;IAAEO,IAAI,EAAEN,GAAG,CAACM,IAAI;IAAEC,GAAG,EAAEP,GAAG,CAACQ;EAAQ,CAAC,CAAC;AAChD,CAAC,CAAC;AAEFX,GAAG,CAACY,MAAM,CAACf,MAAM,CAACgB,IAAI,EAAE,MAAM;EAC5BN,OAAO,CAACO,GAAG,CAAC,4BAA4BjB,MAAM,CAACgB,IAAI,KAAK,CAAC;AAC3D,CAAC,CAAC","ignoreList":[]}},"mtime":1725646766494}}